spring.application.name=userapi
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=USER

#H2 Database conf
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true

# Regex conf
validation.email.regex=^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$
validation.password.regex=^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$

#security
    # (Base64 de una clave secreta)
jwt.secret=U87nkCLCyUuOdJXAIbtbm4uV1GPAaO9PE2LUvoZmDFM=
    # 1 hora en milisegundos
jwt.expiration=3600000  

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=userapi-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

resilience4j.circuitbreaker.instances.enrichmentService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.enrichmentService.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.enrichmentService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.enrichmentService.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.enrichmentService.ignoreExceptions=com.example.userapi.exceptions.UserAlreadyExistsException
